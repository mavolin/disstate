package event

// Code generated by tools/codegen/event. DO NOT EDIT.

import "github.com/diamondburned/arikawa/v3/gateway"

// generateEvent turns the passed source event into a wrapped event.
func (h *Handler) generateEvent(src interface{}) interface{} {
    base := NewBase()

    switch src := src.(type) {
{{- range .}}
    case *gateway.{{.GatewayName}}:
    {{- if .Old}}
        old, _ := h.state.Cabinet.{{.Old.CabinetFuncName}}(
            {{- range $i, $e := .Old.CabinetFuncParams}}
                {{- if gt $i 0}}
                    {{- print ", "}}
                {{- end}}
                {{- print "src." .}}
            {{- end -}}
        )
    {{- end}}
        return &{{.Name}}{
            Base: base,
            {{.GatewayName}}: src,
        {{- if .Old}}
            Old: old,
        {{- end}}
        }
{{- end}}
    default:
        return nil
    }
}
